// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile0 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "nivel 3":
            case "level_1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . 2 2 2 2 2 2 . . . . . . . . . . . . . . . . 
. . . . . . . . 2 . 2 . . . . . . . . . . . . . . . . . . . . . 
. . . . . 2 . . 2 . 2 . . . . . . . . . . . . . . . . . . . . . 
. . . 2 . 2 . . . . 2 . . . . . . . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.tile0,myTiles.tile2,myTiles.tile3,myTiles.tile5,myTiles.tile6,myTiles.tile1,myTiles.tile7,myTiles.tile4], TileScale.Sixteen);
            case "nivel 5":
            case "level_3":return tiles.createTilemap(hex`2000080000070700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000505050500000005050500070707000000000005050505050000000505050005030303030003000000000000000000000000050000000000050505000000050305050505000300000000000000000000060003040404040404030404040404030404040404030505050505050104000202020302020202020203020202020203020202020203020202020202020202`, img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . 2 2 2 2 . 2 . . . . . . . . . 
. . . . . . . . . . . . . . . . 2 . . . . . 2 . . . . . . . . . 
. . . 2 . . . . . . 2 . . . . . 2 . . . . . 2 . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.tile0,myTiles.tile1,myTiles.tile2,myTiles.tile3,myTiles.tile4,myTiles.tile5,myTiles.tile6,myTiles.tile7], TileScale.Sixteen);
            case "nivel 6":
            case "level_4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . 2 . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . 2 2 . . . . . . . . . . . . . . . . . . 
. . . . . . . . . 2 2 . . . . . . 2 2 2 2 . . . . . . . . . . 2 
2 . . . . 2 . 2 . . . . . . . . 2 . . . . . . . . . . . . . . 2 
2 . . 2 . 2 . 2 . . 2 . . . . 2 2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.tile0,myTiles.tile1,myTiles.tile2,myTiles.tile3,myTiles.tile4,myTiles.tile5,myTiles.tile6,myTiles.tile7], TileScale.Sixteen);
            case "nivel 7":
            case "level_5":return tiles.createTilemap(hex``, img`
...................................2...
..2222222222222222222222222222222..2...
...................................2...
.........2.........................2...
.....2222222222222222222222222222222...
2......................................
2......................................
222222222222222222222222222222222222222
`, [myTiles.tile0,myTiles.tile1,myTiles.tile2,myTiles.tile3,myTiles.tile4,myTiles.tile6,myTiles.tile5,myTiles.tile7], TileScale.Sixteen);
            case "nivel 8":
            case "level_6":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . 2 2 . . . . . . . . . . . . . . . . . 
. . . . . . 2 2 . . . . . 2 2 2 . . 2 2 . . . . . . 2 2 2 2 2 2 2 . . . . 
. . . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.tile0,myTiles.tile1,myTiles.tile2,myTiles.tile3,myTiles.tile6,myTiles.tile5,myTiles.tile4,myTiles.tile7], TileScale.Sixteen);
            case "nivel 4":
            case "level_2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . 2 . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . 2 . . . . . . . . . . . . . . . . . . . . 
. . . . . . . 2 . . . 2 . . . . . . . . . . . . . . . . . . . . 
. . . . . 2 . 2 . . . . . . . . . . . . . . . . . . . . . . . . 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 
. . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.tile0,myTiles.tile1,myTiles.tile2,myTiles.tile3,myTiles.tile4,myTiles.tile5,myTiles.tile6,myTiles.tile7], TileScale.Sixteen);
            case "nivel 1":
            case "level":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . 2 . . . . . . . . . 2 . . . . . . . . . . . . . 
. . . . 2 . . . 2 . . . . 2 . . . . 2 . . . . . . . . . . . . 2 
. . . . 2 . . . 2 . . . . 2 . 2 . . 2 . . . . . . 2 . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.tile0,myTiles.tile1,myTiles.tile2,myTiles.tile3,myTiles.tile4,myTiles.tile5,myTiles.tile6], TileScale.Sixteen);
            case "nivel 2":
            case "level_0":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . 2 . . . . . . . . . . 
. . . . . . . 2 2 . 2 . . . . . . 2 . 2 . 2 . . . . . . . . . . 
. . . . . . 2 2 2 . 2 . . . . 2 . 2 . 2 . 2 . . . . . . . . . . 
2 . . . . 2 2 2 2 . 2 . . 2 . 2 . 2 . 2 . 2 . . . . . . . . . . 
2 . . . . . . . . . 2 . . 2 . . . . . . . 2 . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.tile0,myTiles.tile1,myTiles.tile2,myTiles.tile3,myTiles.tile4,myTiles.tile5,myTiles.tile6,myTiles.tile7], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "tile0":return tile0;
            case "tile1":return tile1;
            case "tile2":return tile2;
            case "tile3":return tile3;
            case "tile4":return tile4;
            case "tile5":return tile5;
            case "tile6":return tile6;
            case "tile7":return tile7;
            case "myTile":
            case "tile8":return tile8;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
